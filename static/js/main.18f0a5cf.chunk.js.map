{"version":3,"sources":["types/SortType.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["SortType","TodoList","todos","selectTodo","setSelectTodo","className","map","todo","cn","id","completed","title","type","onClick","TodoFilter","setFilterTodos","useState","sortType","setSortType","query","setQuery","useEffect","filteredTodos","filterTodos","filter","toLowerCase","includes","trim","Active","Completed","todoFilter","onChange","event","target","value","All","placeholder","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","user","setUser","isLoading","setIsLoading","userId","userFromServer","href","email","name","App","setTodos","todosFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18f0a5cf.chunk.js","sourcesContent":["export enum SortType {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectTodo: Todo | null,\n  setSelectTodo: (value: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  setSelectTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n\n          <tr\n            data-cy=\"todo\"\n            key={todo.id}\n            className={cn(\n              { 'has-background-info-light': todo.id === selectTodo?.id },\n            )}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn(\n                { 'has-text-danger': !todo.completed },\n                { 'has-text-success': todo.completed },\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={cn(\n                      'far',\n                      { 'fa-eye': todo.id !== selectTodo?.id },\n                      { 'fa-eye-slash': todo.id === selectTodo?.id },\n                    )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { FC, useEffect, useState } from 'react';\n\nimport { Todo } from '../../types/Todo';\nimport { SortType } from '../../types/SortType';\n\ntype Props = {\n  todos: Todo[];\n  setFilterTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\n};\n\nconst todoFilter = (\n  todos: Todo[],\n  sortType: SortType | string,\n  query: string,\n): Todo[] => {\n  let filterTodos = [...todos];\n\n  if (query) {\n    filterTodos = filterTodos.filter(todo => (\n      todo.title.toLowerCase().includes(query.trim().toLowerCase())\n    ));\n  }\n\n  switch (sortType) {\n    case SortType.Active:\n      return filterTodos.filter(todo => !todo.completed);\n\n    case SortType.Completed:\n      return filterTodos.filter(todo => todo.completed);\n\n    default:\n      return filterTodos;\n  }\n};\n\nexport const TodoFilter: FC<Props> = ({ todos, setFilterTodos }) => {\n  const [sortType, setSortType] = useState('');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    const filteredTodos = todoFilter(todos, sortType, query);\n\n    setFilterTodos(filteredTodos);\n  }, [sortType, query, todos, setFilterTodos]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={event => setSortType(event.target.value)}\n          >\n            <option value=\"all\">{SortType.All}</option>\n            <option value=\"active\">{SortType.Active}</option>\n            <option value=\"completed\">{SortType.Completed}</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {query && (\n          <span className=\"icon is-right\">\n            <button\n              aria-label=\"Search Clear\"\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\n\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo;\n  setSelectTodo: (value: React.SetStateAction<Todo | null>) => void\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, setSelectTodo }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (todo) {\n      getUser(todo.userId)\n        .then(userFromServer => {\n          setUser(userFromServer);\n          setIsLoading(false);\n        });\n    }\n  }, [todo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!isLoading ? (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            <button\n              aria-label=\"Close Modal\"\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong\n                className={cn(\n                  { 'has-text-success': todo.completed },\n                  { 'has-text-danger': !todo.completed },\n                )}\n              >\n                {todo.completed\n                  ? 'Done'\n                  : 'Planned'}\n              </strong>\n\n              {user && (\n                <>\n                  {' by '}\n\n                  <a href={`mailto:${user.email}`}>\n                    {user.name}\n                  </a>\n                </>\n              )}\n            </p>\n          </div>\n        </div>\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { TodoModal } from './components/TodoModal';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [filterTodos, setFilterTodos] = useState<Todo[]>([]);\n  const [selectTodo, setSelectTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n        setFilterTodos(todosFromServer);\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todos={todos}\n                setFilterTodos={setFilterTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!isLoading ? (\n                <TodoList\n                  todos={filterTodos}\n                  selectTodo={selectTodo}\n                  setSelectTodo={setSelectTodo}\n                />\n              )\n                : (\n                  <Loader />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectTodo && (\n        <TodoModal\n          todo={selectTodo}\n          setSelectTodo={setSelectTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}